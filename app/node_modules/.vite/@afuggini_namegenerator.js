import {
  __commonJS,
  init_define_process_env
} from "./chunk-KP4UBDXM.js";

// node_modules/@afuggini/namegenerator/index.js
var require_namegenerator = __commonJS({
  "node_modules/@afuggini/namegenerator/index.js"(exports, module) {
    init_define_process_env();
    var left = [
      "admiring",
      "adoring",
      "affectionate",
      "agitated",
      "amazing",
      "angry",
      "awesome",
      "blissful",
      "bold",
      "boring",
      "brave",
      "charming",
      "clever",
      "cocky",
      "cool",
      "compassionate",
      "competent",
      "condescending",
      "confident",
      "cranky",
      "crazy",
      "dazzling",
      "determined",
      "distracted",
      "dreamy",
      "eager",
      "ecstatic",
      "elastic",
      "elated",
      "elegant",
      "eloquent",
      "epic",
      "fervent",
      "festive",
      "flamboyant",
      "focused",
      "friendly",
      "frosty",
      "gallant",
      "gifted",
      "goofy",
      "gracious",
      "happy",
      "hardcore",
      "heuristic",
      "hopeful",
      "hungry",
      "infallible",
      "inspiring",
      "jolly",
      "jovial",
      "keen",
      "kind",
      "laughing",
      "loving",
      "lucid",
      "magical",
      "mystifying",
      "modest",
      "musing",
      "naughty",
      "nervous",
      "nifty",
      "nostalgic",
      "objective",
      "optimistic",
      "peaceful",
      "pedantic",
      "pensive",
      "practical",
      "priceless",
      "quirky",
      "quizzical",
      "recursing",
      "relaxed",
      "reverent",
      "romantic",
      "sad",
      "serene",
      "sharp",
      "silly",
      "sleepy",
      "stoic",
      "stupefied",
      "suspicious",
      "sweet",
      "tender",
      "thirsty",
      "trusting",
      "unruffled",
      "upbeat",
      "vibrant",
      "vigilant",
      "vigorous",
      "wizardly",
      "wonderful",
      "xenodochial",
      "youthful",
      "zealous",
      "zen"
    ];
    var right = [
      "albattani",
      "allen",
      "almeida",
      "antonelli",
      "agnesi",
      "archimedes",
      "ardinghelli",
      "aryabhata",
      "austin",
      "babbage",
      "banach",
      "banzai",
      "bardeen",
      "bartik",
      "bassi",
      "beaver",
      "bell",
      "benz",
      "bhabha",
      "bhaskara",
      "black",
      "blackburn",
      "blackwell",
      "bohr",
      "booth",
      "borg",
      "bose",
      "boyd",
      "brahmagupta",
      "brattain",
      "brown",
      "burnell",
      "buck",
      "burnell",
      "cannon",
      "carson",
      "cartwright",
      "chandrasekhar",
      "chaplygin",
      "chatelet",
      "chatterjee",
      "chebyshev",
      "cocks",
      "cohen",
      "chaum",
      "clarke",
      "colden",
      "cori",
      "cray",
      "curran",
      "curie",
      "darwin",
      "davinci",
      "dewdney",
      "dhawan",
      "diffie",
      "dijkstra",
      "dirac",
      "driscoll",
      "dubinsky",
      "easley",
      "edison",
      "einstein",
      "elbakyan",
      "elgamal",
      "elion",
      "ellis",
      "engelbart",
      "euclid",
      "euler",
      "faraday",
      "feistel",
      "fermat",
      "fermi",
      "feynman",
      "franklin",
      "gagarin",
      "galileo",
      "galois",
      "ganguly",
      "gates",
      "gauss",
      "germain",
      "goldberg",
      "goldstine",
      "goldwasser",
      "golick",
      "goodall",
      "gould",
      "greider",
      "grothendieck",
      "haibt",
      "hamilton",
      "haslett",
      "hawking",
      "hellman",
      "heisenberg",
      "hermann",
      "herschel",
      "hertz",
      "heyrovsky",
      "hodgkin",
      "hofstadter",
      "hoover",
      "hopper",
      "hugle",
      "hypatia",
      "ishizaka",
      "jackson",
      "jang",
      "jennings",
      "jepsen",
      "johnson",
      "joliot",
      "jones",
      "kalam",
      "kapitsa",
      "kare",
      "keldysh",
      "keller",
      "kepler",
      "khayyam",
      "khorana",
      "kilby",
      "kirch",
      "knuth",
      "kowalevski",
      "lalande",
      "lamarr",
      "lamport",
      "leakey",
      "leavitt",
      "lederberg",
      "lehmann",
      "lewin",
      "lichterman",
      "liskov",
      "lovelace",
      "lumiere",
      "mahavira",
      "margulis",
      "matsumoto",
      "maxwell",
      "mayer",
      "mccarthy",
      "mcclintock",
      "mclaren",
      "mclean",
      "mcnulty",
      "mendel",
      "mendeleev",
      "meitner",
      "meninsky",
      "merkle",
      "mestorf",
      "minsky",
      "mirzakhani",
      "moore",
      "morse",
      "murdock",
      "moser",
      "napier",
      "nash",
      "neumann",
      "newton",
      "nightingale",
      "nobel",
      "noether",
      "northcutt",
      "noyce",
      "panini",
      "pare",
      "pascal",
      "pasteur",
      "payne",
      "perlman",
      "pike",
      "poincare",
      "poitras",
      "proskuriakova",
      "ptolemy",
      "raman",
      "ramanujan",
      "ride",
      "montalcini",
      "ritchie",
      "rhodes",
      "robinson",
      "roentgen",
      "rosalind",
      "rubin",
      "saha",
      "sammet",
      "sanderson",
      "shannon",
      "shaw",
      "shirley",
      "shockley",
      "shtern",
      "sinoussi",
      "snyder",
      "solomon",
      "spence",
      "sutherland",
      "stallman",
      "stonebraker",
      "swanson",
      "swartz",
      "swirles",
      "taussig",
      "tereshkova",
      "tesla",
      "tharp",
      "thompson",
      "torvalds",
      "tu",
      "turing",
      "varahamihira",
      "vaughan",
      "visvesvaraya",
      "volhard",
      "villani",
      "wescoff",
      "wiles",
      "williams",
      "williamson",
      "wilson",
      "wing",
      "wozniak",
      "wright",
      "wu",
      "yalow",
      "yonath",
      "zhukovsky"
    ];
    (function(global) {
      "use strict";
      var random = function(array) {
        return array[Math.floor(Math.random() * array.length)];
      };
      var NameGenerator = function(separator) {
        return random(left) + (separator || "_") + random(right);
      };
      if (typeof define === "function" && define.amd) {
        define(function() {
          return NameGenerator;
        });
      } else if (typeof exports !== "undefined") {
        if (typeof module !== "undefined" && module.exports) {
          exports = module.exports = NameGenerator;
        }
        exports.NameGenerator = NameGenerator;
      } else {
        global.NameGenerator = NameGenerator;
      }
    })(exports);
  }
});

// dep:@afuggini_namegenerator
init_define_process_env();
var afuggini_namegenerator_default = require_namegenerator();
export {
  afuggini_namegenerator_default as default
};
//# sourceMappingURL=@afuggini_namegenerator.js.map
